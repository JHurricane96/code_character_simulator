cmake_minimum_required(VERSION 3.6.2)
project(test)

include(GenerateExportHeader)
include(CMakeDependentOption)

option(BUILD_PHYSICS "Build physics shared library" OFF)
CMAKE_DEPENDENT_OPTION(BUILD_STATE "Build state shared library" OFF "NOT BUILD_PHYSICS" OFF)
CMAKE_DEPENDENT_OPTION(BUILD_PLAYER "Build player shared library" OFF "NOT BUILD_STATE" OFF)
CMAKE_DEPENDENT_OPTION(BUILD_PLAYER1 "Build player 1 shared library" OFF "NOT BUILD_PLAYER" OFF)
CMAKE_DEPENDENT_OPTION(BUILD_PLAYER2 "Build player 2 shared library" OFF "NOT BUILD_PLAYER1" OFF)
CMAKE_DEPENDENT_OPTION(BUILD_DRIVERS "Build drivers shared library" OFF "NOT BUILD_PLAYER2" OFF)
CMAKE_DEPENDENT_OPTION(BUILD_TESTER "Build tester shared library" OFF "NOT BUILD_DRIVERS" OFF)
CMAKE_DEPENDENT_OPTION(BUILD_IPC "Build ipc executable" OFF "NOT BUILD_TESTER" OFF)
CMAKE_DEPENDENT_OPTION(BUILD_MAIN "Build main executable" OFF "NOT BUILD_IPC" OFF)
CMAKE_DEPENDENT_OPTION(BUILD_ALL "Build all" OFF "NOT BUILD_MAIN" OFF)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

foreach(OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES})
	string(TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG)
	set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR}/${OUTPUTCONFIG}/bin)
	set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR}/${OUTPUTCONFIG}/lib)
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR}/${OUTPUTCONFIG}/lib)
endforeach(OUTPUTCONFIG CMAKE_CONFIGURATION_TYPES)

if(BUILD_PHYSICS)
	add_subdirectory(src/physics)
elseif(BUILD_STATE)
	add_subdirectory(src/state)
elseif(BUILD_PLAYER)
	add_subdirectory(src/player)
elseif(BUILD_PLAYER1)
	add_subdirectory(src/player1)
elseif(BUILD_PLAYER2)
	add_subdirectory(src/player2)
elseif(BUILD_DRIVERS)
	add_subdirectory(src/drivers)
elseif(BUILD_TESTER)
	add_subdirectory(src/tester)
elseif(BUILD_MAIN)
	add_subdirectory(src/main)
elseif(BUILD_IPC)
	add_subdirectory(src/ipc)
else()
	add_subdirectory(src/physics)
	add_subdirectory(src/state)
	add_subdirectory(src/player)
	add_subdirectory(src/player1)
	add_subdirectory(src/player2)
	add_subdirectory(src/drivers)
	add_subdirectory(src/main)
endif()
