/**
 * @file state.proto
 * Define message format for entire state object
 */

/**
 * Version: Proto3 explicit declaration
 */
syntax = "proto3";

/**
 * Package specifier to prevent name clashes 
 * between protocol message types
 */
package IPC;

/**
 * Message describes the state object
 * Repeated: Map a vector
 * Enum: Composite message type with open enum types
 * Enum defaults to value set with tag 0
 */
message State {

	/**
	* Message describing Vector2D Class
	*/
	message Vector2D {
	double x = 1;
	double y = 2;
	}

	/**
	 * Message describes base class actor
	 */
	message Actor {

		int64 id = 1;
		int64 player_id = 2;
		int64 pos_x = 3;
		int64 pos_y = 4;
		bool attack = 5;
		int64 hp = 6;
		int64 max_hp = 7;
		bool is_attacking = 8;
		Vector2D attack_target_position = 9;
		bool is_moving = 10;
		Vector2D destination = 11;
		bool is_carry_flag = 12;
		bool is_being_carried = 13;
		bool is_visible_to_enemy = 14;

		/**
		 * Set type of actor
		 * Default to archer with tag 0
		 */
		enum Actor_type {
			ARCHER = 0;
			ARROW = 1;
			BASE = 2;
			FLAG = 3;
			KING = 4;
			SCOUT = 5;
			SWORDSMAN = 6;
			TOWER = 7;
		}
		Actor_type actor_type = 15;
	}

	/**
	 * Expects a vector of actors
	 */
	repeated Actor actors = 1;

	/**
	 * Message describing LOS Class
	 */
	message LOS {

		enum LOS_TYPE {
				UNEXPLORED = 0;
				EXPLORED = 1;
				DIRECT_LOS = 2;
		}

		/**
		 * Message containing rows of LOS
		 */
		message LOSRows {
			repeated LOS_TYPE element = 1;
		}

		repeated LOSRows row = 1;
	}

	/**
	 * Expects a 2D array of LOSElements
	 */
	LOS player1_los = 2;
	
	/**
	 * Expects a 2D array of LOSElements
	 */
	LOS player2_los = 3;

	/**
	 * Numbers of actors
	 */
	int64 no_of_actors = 4;
}
